// <auto-generated />
using System;
using AgriNaviApi.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgriNaviApi.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250328141733_UnitTestAfter")]
    partial class UnitTestAfter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlueValue")
                        .HasColumnType("int")
                        .HasColumnName("color_blue_value");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("GreenValue")
                        .HasColumnType("int")
                        .HasColumnName("color_green_value");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("color_name");

                    b.Property<int>("RedValue")
                        .HasColumnType("int")
                        .HasColumnName("color_red_value");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("color_uuid");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("colors");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.CropEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("crop_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("crop_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("crop_name");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("crop_remark");

                    b.Property<string>("ShortName")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("crop_short_name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("crop_uuid");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("GroupId");

                    b.ToTable("crops");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.FieldEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("FieldSize")
                        .HasColumnType("int")
                        .HasColumnName("field_size");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("field_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("field_name");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("field_remark");

                    b.Property<string>("ShortName")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("field_short_name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("field_uuid");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("GroupId");

                    b.ToTable("fields");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.GroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("group_delete_flg");

                    b.Property<int>("Kind")
                        .HasColumnType("int")
                        .HasColumnName("group_kind");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("group_name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("group_uuid");

                    b.HasKey("Id");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.QualityStandardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quality_standard_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("quality_standard_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("quality_standard_name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("quality_standard_uuid");

                    b.HasKey("Id");

                    b.ToTable("quality_standards");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.SeasonCropScheduleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("season_crop_schedule_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CropId")
                        .HasColumnType("int")
                        .HasColumnName("crop_id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("season_crop_schedule_end_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("season_crop_schedule_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("season_crop_schedule_name");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("season_crop_schedule_remark");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("season_crop_schedule_start_date");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("season_crop_schedule_uuid");

                    b.HasKey("Id");

                    b.HasIndex("CropId");

                    b.ToTable("season_crop_schedules");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ShipmentRecordDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipment_record_detail_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("shipment_record_detail_amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<int>("QualityStandardId")
                        .HasColumnType("int")
                        .HasColumnName("quality_standard_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("shipment_record_detail_quantity");

                    b.Property<int>("ShipmentRecordId")
                        .HasColumnType("int")
                        .HasColumnName("shipment_record_id");

                    b.Property<int>("ShippingDestinationId")
                        .HasColumnType("int")
                        .HasColumnName("shipping_destination_id");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("unit_id");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("shipment_record_detail_uuid");

                    b.HasKey("Id");

                    b.HasIndex("QualityStandardId");

                    b.HasIndex("ShipmentRecordId");

                    b.HasIndex("ShippingDestinationId");

                    b.HasIndex("UnitId");

                    b.ToTable("shipment_record_details");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ShipmentRecordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipment_record_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CropId")
                        .HasColumnType("int")
                        .HasColumnName("crop_id");

                    b.Property<int>("FieldId")
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("shipment_record_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("date")
                        .HasColumnName("shipment_record_date");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("shipment_record_remark");

                    b.Property<int>("SeasonCropScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("season_crop_schedule_id");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("shipment_record_uuid");

                    b.HasKey("Id");

                    b.HasIndex("CropId");

                    b.HasIndex("FieldId");

                    b.HasIndex("SeasonCropScheduleId");

                    b.ToTable("shipment_records");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ShippingDestinationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipping_destination_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("shipping_destination_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("shipping_destination_name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("shipping_destination_uuid");

                    b.HasKey("Id");

                    b.ToTable("shipping_destinations");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.UnitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("unit_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("unit_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unit_name");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("unit_uuid");

                    b.HasKey("Id");

                    b.ToTable("units");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("user_address");

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("user_email");

                    b.Property<string>("FullName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("user_full_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("user_delete_flg");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("user_login_id");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("user_password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("user_phone_number");

                    b.Property<int>("PrivilegeId")
                        .HasColumnType("int")
                        .HasColumnName("privilege_id");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("user_remark");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("user_salt");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_uuid");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.CropEntity", b =>
                {
                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.ColorEntity", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.FieldEntity", b =>
                {
                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.ColorEntity", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.SeasonCropScheduleEntity", b =>
                {
                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.CropEntity", "Crop")
                        .WithMany()
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ShipmentRecordDetailEntity", b =>
                {
                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.QualityStandardEntity", "QualityStandard")
                        .WithMany()
                        .HasForeignKey("QualityStandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.ShipmentRecordEntity", "ShipmentRecord")
                        .WithMany("Details")
                        .HasForeignKey("ShipmentRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.ShippingDestinationEntity", "ShippingDestination")
                        .WithMany()
                        .HasForeignKey("ShippingDestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.UnitEntity", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QualityStandard");

                    b.Navigation("ShipmentRecord");

                    b.Navigation("ShippingDestination");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ShipmentRecordEntity", b =>
                {
                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.CropEntity", "Crop")
                        .WithMany()
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.FieldEntity", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.SeasonCropScheduleEntity", "SeasonCropSchedule")
                        .WithMany()
                        .HasForeignKey("SeasonCropScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");

                    b.Navigation("Field");

                    b.Navigation("SeasonCropSchedule");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.UserEntity", b =>
                {
                    b.HasOne("AgriNaviApi.Infrastructure.Persistence.Entities.ColorEntity", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("AgriNaviApi.Infrastructure.Persistence.Entities.ShipmentRecordEntity", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
